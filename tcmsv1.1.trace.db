11-15 14:12:11 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "CLIENTS" not found; SQL statement:
INSERT INTO clients (client_name, address, tel_num, email) VALUES ( ?, ?, ?, ?) [42102-187]
11-15 14:15:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE CLIENTS IF[*] NOT EXIST( CLIENT_ID SERIAL PRIMARY KEY, CLIENT_NAME VARCHAR(200) NOT NULL, ADDRESS VARCHAR(250) NOT NULL, TEL_NUM VARCHAR(50) NOT NULL, EMAIL VARCHAR(200) NOT NULL ); "; SQL statement:
create table clients IF NOT EXIST( client_id serial primary key, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ); [42000-187]
11-15 14:16:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE CLIENTS IF[*] NOT EXIST( CLIENT_ID SERIAL PRIMARY KEY, CLIENT_NAME VARCHAR(200) NOT NULL, ADDRESS VARCHAR(250) NOT NULL, TEL_NUM VARCHAR(50) NOT NULL, EMAIL VARCHAR(200) NOT NULL ); "; SQL statement:
create table clients IF NOT EXIST( client_id serial primary key, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ); [42000-187]
11-15 14:16:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE CLIENTS IF[*] NOT EXIST( CLIENT_ID SERIAL PRIMARY KEY, CLIENT_NAME VARCHAR(200) NOT NULL, ADDRESS VARCHAR(250) NOT NULL, TEL_NUM VARCHAR(50) NOT NULL, EMAIL VARCHAR(200) NOT NULL ); "; SQL statement:
create table clients IF NOT EXIST( client_id serial primary key, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ); [42000-187]
11-15 14:17:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE CLIENTS IF[*] NOT EXIST( CLIENT_ID SERIAL PRIMARY KEY, CLIENT_NAME VARCHAR(200) NOT NULL, ADDRESS VARCHAR(250) NOT NULL, TEL_NUM VARCHAR(50) NOT NULL, EMAIL VARCHAR(200) NOT NULL ) "; SQL statement:
create table clients IF NOT EXIST( client_id serial primary key, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42000-187]
11-15 14:18:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "CLIENTS" already exists; SQL statement:
create table clients ( client_id serial primary key, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42101-187]
11-15 14:18:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE CLIENTS ( CLIENT_ID INT PRIMARY KEY AUTO[*] INCREMENT, CLIENT_NAME VARCHAR(200) NOT NULL, ADDRESS VARCHAR(250) NOT NULL, TEL_NUM VARCHAR(50) NOT NULL, EMAIL VARCHAR(200) NOT NULL ) "; expected "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
create table clients ( client_id int primary key auto increment, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42001-187]
11-15 14:19:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "CLIENTS" already exists; SQL statement:
create table clients ( client_id int primary key auto_increment, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42101-187]
11-15 14:19:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE CLIENTS IF[*] NOT EXIST ( CLIENT_ID INT PRIMARY KEY AUTO_INCREMENT, CLIENT_NAME VARCHAR(200) NOT NULL, ADDRESS VARCHAR(250) NOT NULL, TEL_NUM VARCHAR(50) NOT NULL, EMAIL VARCHAR(200) NOT NULL ) "; SQL statement:
create table clients IF NOT EXIST ( client_id int primary key auto_increment, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42000-187]
11-15 14:20:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "CLIENTS" already exists; SQL statement:
create table clients( client_id int primary key auto_increment, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42101-187]
11-15 14:21:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "CLIENTS" already exists; SQL statement:
create table clients( client_id int primary key auto_increment, client_name varchar(200) not null, address varchar(250) not null, tel_num varchar(50) not null, email varchar(200) not null ) [42101-187]
11-15 14:21:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Parameter "#2" is not set; SQL statement:
INSERT INTO clients (client_name, address, tel_num, email) VALUES ( ?, ?, ?, ?) [90012-187]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.Parameter.checkSet(Parameter.java:80)
	at org.h2.command.Prepared.checkParameters(Prepared.java:164)
	at org.h2.command.CommandContainer.query(CommandContainer.java:89)
	at org.h2.command.Command.executeQuery(Command.java:197)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:108)
	at io.turntabl.persistance.DBConnection.store(DBConnection.java:31)
	at io.turntabl.persistance.DBConnectionTest.store(DBConnectionTest.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
